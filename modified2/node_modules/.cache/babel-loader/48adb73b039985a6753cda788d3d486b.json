{"remainingRequest":"/Users/sunyingjin/EE6883/ELENE6883_Final-Project/modified2/node_modules/babel-loader/lib/index.js!/Users/sunyingjin/EE6883/ELENE6883_Final-Project/modified2/node_modules/eslint-loader/index.js??ref--14-0!/Users/sunyingjin/EE6883/ELENE6883_Final-Project/modified2/src/api/index.js","dependencies":[{"path":"/Users/sunyingjin/EE6883/ELENE6883_Final-Project/modified2/src/api/index.js","mtime":1652468723605},{"path":"/Users/sunyingjin/EE6883/ELENE6883_Final-Project/modified2/babel.config.js","mtime":1648391370000},{"path":"/Users/sunyingjin/EE6883/ELENE6883_Final-Project/modified2/node_modules/cache-loader/dist/cjs.js","mtime":1651969390112},{"path":"/Users/sunyingjin/EE6883/ELENE6883_Final-Project/modified2/node_modules/babel-loader/lib/index.js","mtime":1651969396060},{"path":"/Users/sunyingjin/EE6883/ELENE6883_Final-Project/modified2/node_modules/eslint-loader/index.js","mtime":1651969390158}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/sunyingjin/EE6883/ELENE6883_Final-Project/modified2/src/api/index.js"],"names":["contract","Big","getName","Instance","methods","name","call","getSymbol","symbol","getSold","Instance2","tokensSold","getBalance","acc","balanceOf","getPot","lottery_contract_addr","getPlayers","addr","Instance3","from","getlotteryId","lotteryId","lotteryHistory","i","enter","sendBlock","password","amount","times","toString","gas_price","gas","pickwinner","len","pickWinner","res1","console","log","transfer","lotteryAddress","res2","gettest","res22","res8","then","data","buy_token","limit","amount2","buyTokens","response","accountAddress","success"],"mappings":"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","sourcesContent":["import contract from '../contract';\n\n//import store from '../store'\n\nimport Big from 'bignumber.js'\n\nexport default {\n    async getName() {\n        return await contract.Instance.methods.name().call();\n    },\n    async getSymbol() {\n        return await contract.Instance.methods.symbol().call();\n    },\n    async getSold() {\n        return await contract.Instance2.methods.tokensSold().call();\n    },\n    async getBalance(acc) {\n        return await contract.Instance.methods.balanceOf(acc).call();\n    },\n    async getPot(lottery_contract_addr) {\n        return await this.getBalance(lottery_contract_addr);\n    },\n    async getPlayers(addr) {\n        return await contract.Instance3.methods.getPlayers().call({from: addr});\n    },\n    async getlotteryId(addr) {\n        return await contract.Instance3.methods.lotteryId().call({from: addr});\n    },\n    async lotteryHistory(i,addr) {\n        return await contract.Instance3.methods.lotteryHistory(i).call({from: addr});\n    },\n    async enter(addr) {\n        return await contract.Instance3.methods.enter()\n        .sendBlock({\n            from: addr,\n            password: 'markmark',\n            amount: new Big('1').times('1e18').toString(),\n            gas_price: '1000000000',\n            gas:'2000000',\n        });\n    },\n    async pickwinner(addr,len) {\n        let res1= await contract.Instance3.methods.pickWinner()\n        .sendBlock({\n            from: addr,\n            password: 'markmark',\n            amount: \"0\",\n            gas_price: '1000000000',\n            gas:'2000000',\n        });\n        console.log(\"pic winner res   \"+res1)\n\n        \n        len=\"\"+len\n        console.log(\"len!!\" +len)//contract addr of lottery!!!!\n        let res2=await contract.Instance.methods.transfer(contract.lotteryAddress,new Big(len).toString())\n        .sendBlock({\n            from: addr,\n            password: 'markmark',\n            amount: \"0\",\n            gas_price: '1000000000',\n            gas:'2000000',\n        });\n        console.log(\"transfer func res   \"+res2)\n        return res2\n    },\n    async gettest(addr) {\n\n\n        //console.log(\"res1   \"+res1)\n        let res2=await contract.Instance.methods.transfer(contract.lotteryAddress,new Big('4').times('1e1').toString())\n        .sendBlock({\n            from: addr,\n            password: 'markmark',\n            amount: \"0\",\n            gas_price: '1000000000',\n            gas:'2000000',\n        });//这个函数是将测试转钱功能---测试ok now！\n        console.log(\"res2   \"+res2)\n\n        console.log(\"now michael\")\n        console.log(new Big('4').times('1e18').toString())\n        console.log(new Big('3').times('1e18').toString())\n        let res22=await contract.Instance3.methods.enter()\n        .sendBlock({\n            from: addr,\n            password: 'markmark',\n            amount: new Big('0.15').times('1e18').toString(),\n            gas_price: '1000000000',\n            gas:'2000000',\n        });//这个函数是将账户加入抽奖池---测试正确！\n        console.log(\"res22  \"+res22)\n\n\n        var res8=await contract.Instance.methods.balanceOf(addr).call({from: addr});\n        console.log(\"balanceof test   \"+res8)\n\n        contract.Instance3.methods.getBalance().call({from: addr}).then(data => {console.log('testCall1 data', data)})\n        return res2\n\n\n    },\n\n    async buy_token(limit,addr) {\n        console.log(\"now buying\")\n        var amount2=''+limit\n        console.log(amount2)\n\n        //console.log(CCNAmount.toString())\n        const response = await contract.Instance2.methods.buyTokens(new Big(limit).toString())\n        .sendBlock({\n            from: addr,\n            password: 'markmark',\n            amount: amount2,\n            gas_price: '1000000000',\n            gas:'2000000',\n        });\n        let res2=await contract.Instance.methods.transfer(contract.accountAddress,new Big(limit).toString())\n        .sendBlock({\n            from: addr,\n            password: 'markmark',\n            amount: \"0\",\n            gas_price: '1000000000',\n            gas:'2000000',\n        });//这个函数是将测试转钱功能---测试ok now！\n        if (response.success) {\n            console.log('transaction success: ', response);\n        } else {\n            console.log('transaction failed: ', response);\n        }\n\n        return res2;\n    }\n}"]}]}